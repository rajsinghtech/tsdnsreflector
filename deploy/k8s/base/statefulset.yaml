apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tsdnsreflector
  namespace: tsdnsreflector
spec:
  serviceName: tsdnsreflector-headless
  replicas: 1
  selector:
    matchLabels:
      app: tsdnsreflector
  template:
    metadata:
      labels:
        app: tsdnsreflector
    spec:
      serviceAccountName: tsdnsreflector
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: tsdnsreflector
        image: tsdnsreflector
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          allowPrivilegeEscalation: false
          runAsNonRoot: true
        env:
        # Kubernetes metadata
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        
        # Server configuration
        - name: TSDNS_HOSTNAME
          value: "tsdnsreflector"
        - name: TSDNS_DNS_PORT
          value: "53"
        - name: TSDNS_HTTP_PORT
          value: "8080"
        - name: TSDNS_BIND_ADDRESS
          value: "0.0.0.0"
        - name: TSDNS_DEFAULT_TTL
          value: "300"
        - name: TSDNS_HEALTH_ENABLED
          value: "true"
        - name: TSDNS_METRICS_ENABLED
          value: "true"
        
        # Logging configuration
        - name: TSDNS_LOG_LEVEL
          value: "info"
        - name: TSDNS_LOG_FORMAT
          value: "json"
        - name: TSDNS_LOG_QUERIES
          value: "false"
        
        # Tailscale configuration
        - name: TS_STATE
          value: "kube:$(POD_NAME)"
        - name: TSDNS_TS_HOSTNAME
          value: "tsdnsreflector"
        - name: TSDNS_TS_STATE_DIR
          value: "/tmp/tailscale"
        
        # Traditional auth key (use either this OR OAuth below, not both)
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale-auth
              key: authkey
              optional: true
        
        # OAuth client credentials (alternative to TS_AUTHKEY)
        # Using k8s-operator pattern: file-based OAuth
        - name: CLIENT_ID_FILE
          value: "/etc/tailscale/oauth/client_id"
        - name: CLIENT_SECRET_FILE
          value: "/etc/tailscale/oauth/client_secret"
        
        # OAuth fallback: environment variables
        - name: TS_API_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: tailscale-oauth
              key: client_id
              optional: true
        - name: TS_API_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: tailscale-oauth
              key: client_secret
              optional: true
        
        # OAuth configuration
        - name: TSDNS_TS_OAUTH_URL
          value: "https://login.tailscale.com"
        - name: TSDNS_TS_OAUTH_TAGS
          value: "tag:dns"
        - name: TSDNS_TS_OAUTH_EPHEMERAL
          value: "true"
        - name: TSDNS_TS_OAUTH_PREAUTHORIZED
          value: "true"
        args:
        - "-config"
        - "/etc/tsdnsreflector/config.json"
        ports:
        - containerPort: 53
          protocol: UDP
          name: dns-udp
        - containerPort: 8080
          protocol: TCP
          name: http
        volumeMounts:
        - name: config
          mountPath: /etc/tsdnsreflector
          readOnly: true
        # OAuth secrets mounted as files (k8s-operator pattern)
        - name: oauth-secrets
          mountPath: /etc/tailscale/oauth
          readOnly: true
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
          successThreshold: 1
      volumes:
      - name: config
        configMap:
          name: tsdnsreflector-config
      # OAuth secrets volume for file-based credentials
      - name: oauth-secrets
        secret:
          secretName: tailscale-oauth
          optional: true